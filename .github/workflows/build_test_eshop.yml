name: Build and test eshop workflow

on:
  workflow_dispatch:
  push:

jobs:
  Install:
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules-

      - name: Install packages with npm
        run: |
          npm ci

  Build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build
        run: |
          npm rebuild node-sass --force
          npm run build -- --colors

      - name: Cache node modules and build folder
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{ runner.os }}--build-${{ github.run_id }}
          restore-keys: ${{ runner.os }}--build-${{ github.run_id }}

  Test:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run tests
        run: |
          npm run test -- --colors

  Deploy:
    needs: [ Build, Test ]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Load Node modules and build folder
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{ runner.os }}--build-${{ github.run_id }}

      - name: Connect to AWS and Deploy
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.SSH_HOST }}
          USER_NAME: ${{ secrets.USER_NAME }}
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            export ANSIBLE_VAULT_PASSWORD='"$ANSIBLE_VAULT_PASSWORD"'
            cd 4IT572_ansible
            git pull
            cd ansible
            echo -n "$ANSIBLE_VAULT_PASSWORD" > .vault_pass.txt && chmod 600 .vault_pass.txt
            ansible-playbook ec2_deploy.yml --vault-password-file .vault_pass.txt --user ec2-user --key-file ../test.pem
            rm .vault_pass.txt
          '
